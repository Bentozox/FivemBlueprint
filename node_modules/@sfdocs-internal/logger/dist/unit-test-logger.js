"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.unitTestLogger = void 0;
const unit_test_transport_1 = __importDefault(require("./unit-test-transport"));
const winston_1 = __importDefault(require("winston"));
const { combine, timestamp, label, printf, splat, simple, colorize } = winston_1.default.format;
const unitTestlogLevelConfig = {
    levels: {
        ...winston_1.default.config.npm.levels,
        validate: 10,
    },
    colors: {
        ...winston_1.default.config.npm.colors,
        validate: 'yellow',
    },
};
/**
 * Singleton instance of unit test logger.
 * Setting the level to silly, so that it prints all the levels by default.
 */
const unitTestLogger = function (config) {
    const configLabel = (config === null || config === void 0 ? void 0 : config.label) ? `:${config.label}` : '';
    winston_1.default.addColors(unitTestlogLevelConfig.colors);
    return winston_1.default.createLogger({
        level: 'silly',
        format: combine(splat(), simple(), colorize(), label({ label: `test-doc-framework${configLabel}` }), timestamp(), printf(({ level, message, label, timestamp }) => {
            return `${timestamp} [${label}] ${level}: ${message}`;
        })),
        transports: [new winston_1.default.transports.Console()],
        exceptionHandlers: [new unit_test_transport_1.default()],
        exitOnError: true,
        levels: unitTestlogLevelConfig.levels,
    });
};
exports.unitTestLogger = unitTestLogger;
//# sourceMappingURL=unit-test-logger.js.map